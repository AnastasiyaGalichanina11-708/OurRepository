// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Instagram.Migrations
{
    [DbContext(typeof(InstagramContext))]
    partial class InstagramContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Instagram.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FullName");

                    b.Property<string>("Password");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Instagram.Models.Comment", b =>
                {
                    b.Property<int>("CommentID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PostID");

                    b.Property<string>("Text");

                    b.Property<string>("Сommentator");

                    b.HasKey("CommentID");

                    b.HasIndex("PostID");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("Instagram.Models.FileModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<string>("Path");

                    b.Property<DateTime>("ReleaseDate");

                    b.HasKey("ID");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("Instagram.Models.Like", b =>
                {
                    b.Property<int>("LikeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PostID");

                    b.Property<string>("UserName");

                    b.HasKey("LikeID");

                    b.HasIndex("PostID");

                    b.ToTable("Like");
                });

            modelBuilder.Entity("Instagram.Models.Post", b =>
                {
                    b.Property<int>("PostID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FileID");

                    b.Property<DateTime>("ReleaseDate");

                    b.HasKey("PostID");

                    b.HasIndex("FileID");

                    b.ToTable("Post");
                });

            modelBuilder.Entity("Instagram.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName");

                    b.Property<string>("Password");

                    b.Property<string>("Status");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Instagram.Models.Comment", b =>
                {
                    b.HasOne("Instagram.Models.Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostID");
                });

            modelBuilder.Entity("Instagram.Models.Like", b =>
                {
                    b.HasOne("Instagram.Models.Post")
                        .WithMany("Likes")
                        .HasForeignKey("PostID");
                });

            modelBuilder.Entity("Instagram.Models.Post", b =>
                {
                    b.HasOne("Instagram.Models.FileModel", "File")
                        .WithMany()
                        .HasForeignKey("FileID");
                });
#pragma warning restore 612, 618
        }
    }
}
